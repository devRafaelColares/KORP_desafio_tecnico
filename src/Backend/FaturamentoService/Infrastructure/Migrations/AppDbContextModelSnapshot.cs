// <auto-generated />
using System;
using FaturamentoService.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FaturamentoService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Latin1_General_100_CI_AI")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FaturamentoService.Models.ItemNotaFiscal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Identificador do item da nota fiscal");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NotaFiscalId")
                        .HasColumnType("int")
                        .HasComment("FK para nota fiscal");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int")
                        .HasComment("Id do produto cadastrado no EstoqueService");

                    b.Property<int>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasComment("Quantidade do produto na nota fiscal");

                    b.HasKey("Id");

                    b.HasIndex("NotaFiscalId")
                        .HasDatabaseName("IX_ItensNotaFiscal_NotaFiscalId");

                    b.HasIndex("ProdutoId")
                        .HasDatabaseName("IX_ItensNotaFiscal_ProdutoId");

                    b.ToTable("ItensNotaFiscal", (string)null);
                });

            modelBuilder.Entity("FaturamentoService.Models.NotaFiscal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Identificador da nota fiscal");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEmissao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("Data de emissão da nota fiscal");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasComment("Número da nota fiscal");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("Status da nota fiscal: 0=Aberta, 1=Fechada");

                    b.HasKey("Id");

                    b.HasIndex("Numero")
                        .IsUnique()
                        .HasDatabaseName("UX_NotaFiscal_Numero");

                    b.ToTable("NotasFiscais", (string)null);
                });

            modelBuilder.Entity("FaturamentoService.Models.ItemNotaFiscal", b =>
                {
                    b.HasOne("FaturamentoService.Models.NotaFiscal", "NotaFiscal")
                        .WithMany("Itens")
                        .HasForeignKey("NotaFiscalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ItensNotaFiscal_NotaFiscal");

                    b.Navigation("NotaFiscal");
                });

            modelBuilder.Entity("FaturamentoService.Models.NotaFiscal", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
